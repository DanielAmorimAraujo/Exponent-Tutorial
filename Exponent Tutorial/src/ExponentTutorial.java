/*
Name: Daniel Araujo
Date: 23 July 18
Title: Exponent Tutorial
Purpose: to teach exponent rules and provide practice work and a quiz
 */

import java.awt.Color; //imports classes needed to change the color of labels
import java.util.*; //imports classes need for array lists

public class ExponentTutorial extends javax.swing.JFrame {

    public ExponentTutorial() {
        initComponents();
    }

    /*This method is called from within the constructor to initialize the form.
    WARNING: Do NOT modify this code. The content of this method is always
    regenerated by the Form Editor.*/
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlStart = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        pnlMenu = new javax.swing.JPanel();
        lblMenuTitle = new javax.swing.JLabel();
        btnProductRule = new javax.swing.JButton();
        btnQuotientRule = new javax.swing.JButton();
        btnPowerRule = new javax.swing.JButton();
        btnNegativeExponents = new javax.swing.JButton();
        btnQuiz = new javax.swing.JButton();
        pnlProductRule = new javax.swing.JPanel();
        lblProductRuleTitle = new javax.swing.JLabel();
        lblProductRuleExplanation = new javax.swing.JLabel();
        btnProductRulePractice = new javax.swing.JButton();
        btnMenuOne = new javax.swing.JButton();
        pnlQuotientRule = new javax.swing.JPanel();
        lblQuotientRuleTitle = new javax.swing.JLabel();
        lblQuotientRuleExplanation = new javax.swing.JLabel();
        btnQuotientRulePractice = new javax.swing.JButton();
        btnMenuTwo = new javax.swing.JButton();
        pnlPowerRule = new javax.swing.JPanel();
        lblPowerRuleTitle = new javax.swing.JLabel();
        lblPowerRuleExplanation = new javax.swing.JLabel();
        btnPowerRulePractice = new javax.swing.JButton();
        btnMenuThree = new javax.swing.JButton();
        pnlNegativeExponent = new javax.swing.JPanel();
        lblNegativeExponentTitle = new javax.swing.JLabel();
        lblNegativeExponentExplanation = new javax.swing.JLabel();
        btnNegativeExponentPractice = new javax.swing.JButton();
        btnMenuFour = new javax.swing.JButton();
        pnlPractice = new javax.swing.JPanel();
        lblPracticeTitle = new javax.swing.JLabel();
        lblQuestionBaseOne = new javax.swing.JLabel();
        lblQuestionExponentOne = new javax.swing.JLabel();
        lblQuestionBaseTwo = new javax.swing.JLabel();
        lblQuestionExponentTwo = new javax.swing.JLabel();
        lblQuestionOperator = new javax.swing.JLabel();
        lblQuestionBracket = new javax.swing.JLabel();
        txtAnswer = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        lblPracticeOutput = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPracticeOutput = new javax.swing.JTextArea();
        btnGiveUp = new javax.swing.JButton();
        btnAnotherQuestion = new javax.swing.JButton();
        btnMenuFive = new javax.swing.JButton();
        lblHiddenAnswer = new javax.swing.JLabel();
        pnlQuiz = new javax.swing.JPanel();
        lblQuizTitle = new javax.swing.JLabel();
        lblQuestionOne = new javax.swing.JLabel();
        lblQuestionTwo = new javax.swing.JLabel();
        lblQuestionThree = new javax.swing.JLabel();
        lblQuestionFour = new javax.swing.JLabel();
        lblQuestionFive = new javax.swing.JLabel();
        txtQuizAnswerOne = new javax.swing.JTextField();
        txtQuizAnswerTwo = new javax.swing.JTextField();
        txtQuizAnswerThree = new javax.swing.JTextField();
        txtQuizAnswerFour = new javax.swing.JTextField();
        txtQuizAnswerFive = new javax.swing.JTextField();
        btnAnswerEnter = new javax.swing.JButton();
        lblQuizOutput = new javax.swing.JLabel();
        btnMenuSix = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlStart.setBackground(new java.awt.Color(255, 255, 255));

        btnStart.setBackground(new java.awt.Color(255, 255, 255));
        btnStart.setFont(new java.awt.Font("Sitka Banner", 1, 36)); // NOI18N
        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStartLayout = new javax.swing.GroupLayout(pnlStart);
        pnlStart.setLayout(pnlStartLayout);
        pnlStartLayout.setHorizontalGroup(
            pnlStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        pnlStartLayout.setVerticalGroup(
            pnlStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pnlMenu.setBackground(new java.awt.Color(255, 255, 255));

        lblMenuTitle.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        lblMenuTitle.setText("Exponent Rules");

        btnProductRule.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnProductRule.setText("Product Rule");
        btnProductRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductRuleActionPerformed(evt);
            }
        });

        btnQuotientRule.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnQuotientRule.setText("Quotient Rule");
        btnQuotientRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuotientRuleActionPerformed(evt);
            }
        });

        btnPowerRule.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnPowerRule.setText("Power Rule");
        btnPowerRule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPowerRuleActionPerformed(evt);
            }
        });

        btnNegativeExponents.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnNegativeExponents.setText("Negative Exponents");
        btnNegativeExponents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegativeExponentsActionPerformed(evt);
            }
        });

        btnQuiz.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnQuiz.setText("Review Quiz");
        btnQuiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuizActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMenuLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(lblMenuTitle))
                    .addGroup(pnlMenuLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnProductRule, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(btnPowerRule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34)
                        .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnNegativeExponents, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(btnQuotientRule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMenuLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnQuiz, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138))
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblMenuTitle)
                .addGap(44, 44, 44)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProductRule)
                    .addComponent(btnQuotientRule))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPowerRule)
                    .addComponent(btnNegativeExponents))
                .addGap(39, 39, 39)
                .addComponent(btnQuiz)
                .addGap(37, 37, 37))
        );

        pnlProductRule.setBackground(new java.awt.Color(255, 255, 255));
        pnlProductRule.setPreferredSize(new java.awt.Dimension(450, 300));

        lblProductRuleTitle.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        lblProductRuleTitle.setText("Product Rule");

        lblProductRuleExplanation.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblProductRuleExplanation.setText("<html>To multiply powers with the same base, keep the base and add the exponents.<br/><b>General Formula:</b> x<sup>a</sup> * x<sup>b</sup> = x<sup>a+b</sup>,<br/>where,<br/>x ≠ 0<br/>a and b are natural numbers</html>");
        lblProductRuleExplanation.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnProductRulePractice.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnProductRulePractice.setText("Practice");
        btnProductRulePractice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductRulePracticeActionPerformed(evt);
            }
        });

        btnMenuOne.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnMenuOne.setText("Menu");
        btnMenuOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuOneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlProductRuleLayout = new javax.swing.GroupLayout(pnlProductRule);
        pnlProductRule.setLayout(pnlProductRuleLayout);
        pnlProductRuleLayout.setHorizontalGroup(
            pnlProductRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductRuleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblProductRuleExplanation, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlProductRuleLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(btnProductRulePractice)
                .addGap(0, 183, Short.MAX_VALUE))
            .addGroup(pnlProductRuleLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnMenuOne)
                .addGap(70, 70, 70)
                .addComponent(lblProductRuleTitle)
                .addGap(156, 156, 156))
        );
        pnlProductRuleLayout.setVerticalGroup(
            pnlProductRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductRuleLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlProductRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProductRuleTitle)
                    .addComponent(btnMenuOne))
                .addGap(26, 26, 26)
                .addComponent(lblProductRuleExplanation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnProductRulePractice)
                .addGap(50, 50, 50))
        );

        pnlQuotientRule.setBackground(new java.awt.Color(255, 255, 255));
        pnlQuotientRule.setPreferredSize(new java.awt.Dimension(450, 300));

        lblQuotientRuleTitle.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        lblQuotientRuleTitle.setText("Quotient Rule");

        lblQuotientRuleExplanation.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblQuotientRuleExplanation.setText("<html>To divide powers with the same base, keep the base and subtract the exponents.<br/><b>General Formula:</b> x<sup>a</sup> * x<sup>b</sup> = x<sup>a-b</sup>,<br/>where,<br/>x ≠ 0<br/>a and b are natural numbers</html>");
        lblQuotientRuleExplanation.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnQuotientRulePractice.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnQuotientRulePractice.setText("Practice");
        btnQuotientRulePractice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuotientRulePracticeActionPerformed(evt);
            }
        });

        btnMenuTwo.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnMenuTwo.setText("Menu");
        btnMenuTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuTwoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlQuotientRuleLayout = new javax.swing.GroupLayout(pnlQuotientRule);
        pnlQuotientRule.setLayout(pnlQuotientRuleLayout);
        pnlQuotientRuleLayout.setHorizontalGroup(
            pnlQuotientRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuotientRuleLayout.createSequentialGroup()
                .addGroup(pnlQuotientRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuotientRuleLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblQuotientRuleExplanation, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(pnlQuotientRuleLayout.createSequentialGroup()
                        .addGroup(pnlQuotientRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlQuotientRuleLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(btnMenuTwo)
                                .addGap(65, 65, 65)
                                .addComponent(lblQuotientRuleTitle))
                            .addGroup(pnlQuotientRuleLayout.createSequentialGroup()
                                .addGap(180, 180, 180)
                                .addComponent(btnQuotientRulePractice)))
                        .addGap(0, 147, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlQuotientRuleLayout.setVerticalGroup(
            pnlQuotientRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuotientRuleLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlQuotientRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMenuTwo)
                    .addComponent(lblQuotientRuleTitle))
                .addGap(26, 26, 26)
                .addComponent(lblQuotientRuleExplanation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnQuotientRulePractice)
                .addGap(50, 50, 50))
        );

        pnlPowerRule.setBackground(new java.awt.Color(255, 255, 255));
        pnlPowerRule.setPreferredSize(new java.awt.Dimension(450, 300));

        lblPowerRuleTitle.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        lblPowerRuleTitle.setText("Power Rule");

        lblPowerRuleExplanation.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblPowerRuleExplanation.setText("<html>If an exponent is raised to another exponent, you keep the base and multiply the two exponents together.<br/><b>General Formula:</b> (x<sup>a</sup>)<sup>b</sup> = x<sup>a*b</sup>,<br/>where,<br/>x ≠ 0<br/>a and b are natural numbers</html>");
        lblPowerRuleExplanation.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnPowerRulePractice.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnPowerRulePractice.setText("Practice");
        btnPowerRulePractice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPowerRulePracticeActionPerformed(evt);
            }
        });

        btnMenuThree.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnMenuThree.setText("Menu");
        btnMenuThree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuThreeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPowerRuleLayout = new javax.swing.GroupLayout(pnlPowerRule);
        pnlPowerRule.setLayout(pnlPowerRuleLayout);
        pnlPowerRuleLayout.setHorizontalGroup(
            pnlPowerRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPowerRuleLayout.createSequentialGroup()
                .addGroup(pnlPowerRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPowerRuleLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnMenuThree)
                        .addGap(86, 86, 86)
                        .addComponent(lblPowerRuleTitle))
                    .addGroup(pnlPowerRuleLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(btnPowerRulePractice))
                    .addGroup(pnlPowerRuleLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblPowerRuleExplanation, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnlPowerRuleLayout.setVerticalGroup(
            pnlPowerRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPowerRuleLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlPowerRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPowerRuleTitle)
                    .addComponent(btnMenuThree))
                .addGap(26, 26, 26)
                .addComponent(lblPowerRuleExplanation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnPowerRulePractice)
                .addGap(50, 50, 50))
        );

        pnlNegativeExponent.setBackground(new java.awt.Color(255, 255, 255));
        pnlNegativeExponent.setPreferredSize(new java.awt.Dimension(450, 300));

        lblNegativeExponentTitle.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        lblNegativeExponentTitle.setText("Negative Exponents Rule");

        lblNegativeExponentExplanation.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblNegativeExponentExplanation.setText("<html>If a base is raised to a negative exponent, you move the base into the denominator and change the exponent to a positive.<br/><b>General Formula:</b> x<sup>-a</sup>=<sup>1</sup>/<sub>x</sub>a,<br/>where,<br/>x ≠ 0<br/>a is a natural number</html>");
        lblNegativeExponentExplanation.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnNegativeExponentPractice.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnNegativeExponentPractice.setText("Practice");
        btnNegativeExponentPractice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegativeExponentPracticeActionPerformed(evt);
            }
        });

        btnMenuFour.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnMenuFour.setText("Menu");
        btnMenuFour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuFourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNegativeExponentLayout = new javax.swing.GroupLayout(pnlNegativeExponent);
        pnlNegativeExponent.setLayout(pnlNegativeExponentLayout);
        pnlNegativeExponentLayout.setHorizontalGroup(
            pnlNegativeExponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNegativeExponentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNegativeExponentExplanation, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlNegativeExponentLayout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(btnNegativeExponentPractice)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlNegativeExponentLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnMenuFour)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(lblNegativeExponentTitle)
                .addGap(85, 85, 85))
        );
        pnlNegativeExponentLayout.setVerticalGroup(
            pnlNegativeExponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNegativeExponentLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlNegativeExponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNegativeExponentTitle)
                    .addComponent(btnMenuFour))
                .addGap(26, 26, 26)
                .addComponent(lblNegativeExponentExplanation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnNegativeExponentPractice)
                .addGap(50, 50, 50))
        );

        pnlPractice.setBackground(new java.awt.Color(255, 255, 255));
        pnlPractice.setPreferredSize(new java.awt.Dimension(450, 300));

        lblPracticeTitle.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        lblPracticeTitle.setText("Practice");

        lblQuestionBaseOne.setFont(new java.awt.Font("Sitka Text", 0, 36)); // NOI18N

        lblQuestionExponentOne.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N

        lblQuestionBaseTwo.setFont(new java.awt.Font("Sitka Text", 0, 36)); // NOI18N

        lblQuestionExponentTwo.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N

        lblQuestionOperator.setFont(new java.awt.Font("Sitka Text", 0, 24)); // NOI18N

        lblQuestionBracket.setFont(new java.awt.Font("Sitka Text", 0, 24)); // NOI18N

        txtAnswer.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        txtAnswer.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSubmit.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setToolTipText("");
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtPracticeOutput.setEditable(false);
        txtPracticeOutput.setColumns(20);
        txtPracticeOutput.setLineWrap(true);
        txtPracticeOutput.setRows(5);
        txtPracticeOutput.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtPracticeOutput);

        btnGiveUp.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnGiveUp.setText("Give-up");
        btnGiveUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiveUpActionPerformed(evt);
            }
        });

        btnAnotherQuestion.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnAnotherQuestion.setText("Another Question");
        btnAnotherQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnotherQuestionActionPerformed(evt);
            }
        });

        btnMenuFive.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnMenuFive.setText("Menu");
        btnMenuFive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuFiveActionPerformed(evt);
            }
        });

        lblHiddenAnswer.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlPracticeLayout = new javax.swing.GroupLayout(pnlPractice);
        pnlPractice.setLayout(pnlPracticeLayout);
        pnlPracticeLayout.setHorizontalGroup(
            pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHiddenAnswer)
            .addGroup(pnlPracticeLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnMenuFive)
                .addGap(97, 97, 97)
                .addComponent(lblPracticeTitle))
            .addGroup(pnlPracticeLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addGroup(pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPracticeLayout.createSequentialGroup()
                        .addComponent(lblQuestionBracket, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQuestionExponentOne, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlPracticeLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(lblQuestionOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlPracticeLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(lblQuestionExponentTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPracticeLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lblQuestionBaseTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPracticeLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblQuestionBaseOne, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(pnlPracticeLayout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(txtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(btnSubmit))
            .addGroup(pnlPracticeLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblPracticeOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(btnGiveUp))
            .addGroup(pnlPracticeLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(btnAnotherQuestion))
        );
        pnlPracticeLayout.setVerticalGroup(
            pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPracticeLayout.createSequentialGroup()
                .addComponent(lblHiddenAnswer)
                .addGap(15, 15, 15)
                .addGroup(pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMenuFive)
                    .addComponent(lblPracticeTitle))
                .addGap(34, 34, 34)
                .addGroup(pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuestionExponentOne, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuestionExponentTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPracticeLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQuestionBracket, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuestionOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuestionBaseTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuestionBaseOne, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPracticeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnSubmit)))
                .addGap(5, 5, 5)
                .addGroup(pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPracticeOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPracticeLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(btnGiveUp)))
                .addGroup(pnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPracticeLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(btnAnotherQuestion))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPracticeLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9))
        );

        pnlQuiz.setBackground(new java.awt.Color(255, 255, 255));

        lblQuizTitle.setFont(new java.awt.Font("Sitka Heading", 1, 24)); // NOI18N
        lblQuizTitle.setText("Quiz");

        lblQuestionOne.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblQuestionOne.setText("<html><b>1.</b> 6<sup>5</sup>*6<sup>3</sup><html>");

        lblQuestionTwo.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblQuestionTwo.setText("<html><b>2.</b> 3<sup>12</sup>/3<sup>4</sup><html>");

        lblQuestionThree.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblQuestionThree.setText("<html><b>3.</b> (5<sup>3</sup>)<sup>6</sup><html>");

        lblQuestionFour.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblQuestionFour.setText("<html><b>4.</b> 2<sup>-11</sup><html>");

        lblQuestionFive.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblQuestionFive.setText("<html><b>5.</b> (4<sup>3</sup>*4<sup>2</sup>)<sup>-3</sup> / 4<sup>5</sup><html>");

        txtQuizAnswerOne.setFont(new java.awt.Font("Sitka Text", 0, 13)); // NOI18N

        txtQuizAnswerTwo.setFont(new java.awt.Font("Sitka Text", 0, 13)); // NOI18N

        txtQuizAnswerThree.setFont(new java.awt.Font("Sitka Text", 0, 13)); // NOI18N

        txtQuizAnswerFour.setFont(new java.awt.Font("Sitka Text", 0, 13)); // NOI18N

        txtQuizAnswerFive.setFont(new java.awt.Font("Sitka Text", 0, 13)); // NOI18N

        btnAnswerEnter.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnAnswerEnter.setText("Enter");
        btnAnswerEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnswerEnterActionPerformed(evt);
            }
        });

        btnMenuSix.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnMenuSix.setText("Menu");
        btnMenuSix.setEnabled(false);
        btnMenuSix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuSixActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlQuizLayout = new javax.swing.GroupLayout(pnlQuiz);
        pnlQuiz.setLayout(pnlQuizLayout);
        pnlQuizLayout.setHorizontalGroup(
            pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuizLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnMenuSix)
                .addGap(115, 115, 115)
                .addComponent(lblQuizTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlQuizLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlQuizLayout.createSequentialGroup()
                        .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlQuizLayout.createSequentialGroup()
                                .addComponent(lblQuestionFive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(195, 195, 195)
                                .addComponent(txtQuizAnswerFive, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQuizLayout.createSequentialGroup()
                                    .addComponent(lblQuestionThree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(252, 252, 252)
                                    .addComponent(txtQuizAnswerThree, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQuizLayout.createSequentialGroup()
                                    .addComponent(lblQuestionTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(134, 134, 134)
                                    .addComponent(txtQuizAnswerTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlQuizLayout.createSequentialGroup()
                                    .addComponent(lblQuestionFour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtQuizAnswerFour, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlQuizLayout.createSequentialGroup()
                                    .addComponent(lblQuestionOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtQuizAnswerOne, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(74, 74, 74))
                    .addGroup(pnlQuizLayout.createSequentialGroup()
                        .addComponent(lblQuizOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btnAnswerEnter)
                        .addGap(63, 63, 63))))
        );
        pnlQuizLayout.setVerticalGroup(
            pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuizLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlQuizLayout.createSequentialGroup()
                        .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMenuSix)
                            .addComponent(lblQuizTitle))
                        .addGap(17, 17, 17)
                        .addComponent(lblQuestionOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtQuizAnswerOne, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblQuestionTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuizAnswerTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuizLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblQuestionThree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuizAnswerThree, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(lblQuestionFour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlQuizLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtQuizAnswerFour, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblQuestionFive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuizAnswerFive, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuizLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblQuizOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlQuizLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAnswerEnter))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlQuiz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlQuotientRule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlNegativeExponent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlPowerRule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlPractice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlProductRule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlQuiz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlQuotientRule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlNegativeExponent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlPowerRule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlPractice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlProductRule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //code that executes when the btnStart button is pressed
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        switchScreen(); //calls on the switchScreen method which turns the visibility of all the panels false
        pnlMenu.setVisible(true); //turns the visibility of the menu screen (pnlMenu) true
    }//GEN-LAST:event_btnStartActionPerformed

    //code that executes when the btnProductRule button is pressed
    private void btnProductRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductRuleActionPerformed
        switchScreen(); //calls on the switchScreen method which turns the visibility of all the panels false
        pnlProductRule.setVisible(true); //turns the visibility of the product rule screen (pnlProductRule) true
    }//GEN-LAST:event_btnProductRuleActionPerformed

    //code that executes when the btnProductRulePractice button is pressed
    private void btnProductRulePracticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductRulePracticeActionPerformed
        practiceButton(); //calls on the practiceButton method
        
        lblQuestionOperator.setText("*"); //sets the operator as an astericks for multiplication
        txtPracticeOutput.setText("Remember, when the numbers have the same base and they are being multiplied, you add the exponents!"); //sets the text in the tip box (txtPracticeOutput) as a reminder on how to solve the problem
        answerExponent(); //calls on the answerExponent method
    }//GEN-LAST:event_btnProductRulePracticeActionPerformed

    //code that executes when the btnQuotientRule button is pressed
    private void btnQuotientRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuotientRuleActionPerformed
        switchScreen(); //calls on the switchScreen method which turns the visibility of all the panels false
        pnlQuotientRule.setVisible(true); //turns the visibility of the quotient rule screen (pnlQuotientRule) true
    }//GEN-LAST:event_btnQuotientRuleActionPerformed

    //code that executes when the btnQuotientRulePractice button is pressed
    private void btnQuotientRulePracticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuotientRulePracticeActionPerformed
        practiceButton(); //calls on the practiceButton method
        
        lblQuestionOperator.setText("/"); //sets the operator as a forward slash for division
        txtPracticeOutput.setText("Remember, when the numbers have the same base and they are being divided, you subtract the exponents!"); //sets the text in the tip box (txtPracticeOutput) as a reminder on how to solve the problem
        answerExponent(); //calls on the answerExponent method
    }//GEN-LAST:event_btnQuotientRulePracticeActionPerformed

    //code that executes when the btnPowerRule button is pressed
    private void btnPowerRuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowerRuleActionPerformed
        switchScreen(); //calls on the switchScreen method which turns the visibility of all the panels false
        pnlPowerRule.setVisible(true); //turns the visibility of the power rule screen (pnlPowerRule) true
    }//GEN-LAST:event_btnPowerRuleActionPerformed

    //code that executes when the btnPowerRulePractice button is pressed
    private void btnPowerRulePracticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowerRulePracticeActionPerformed
        practiceButton(); //calls on the practiceButton method
        
        lblQuestionOperator.setText(")"); //sets the operator as an end bracket for to complete the bracket around the first number
        txtPracticeOutput.setText("Remember, when an exponent has an exponent, you multiply the exponents!"); //sets the text in the tip box (txtPracticeOutput) as a reminder on how to solve the problem
        lblQuestionBracket.setText("("); //sets the operator as an open bracket for to complete the bracket around the first number
        lblQuestionBaseTwo.setForeground(Color.WHITE); //sets the text in lblQuestionBaseTwo white as the value in this base is not needed for the user, and so, it is hidden from the user
        answerExponent(); //calls on the answerExponent method
    }//GEN-LAST:event_btnPowerRulePracticeActionPerformed

    //code that executes when the btnNegativeExponent button is pressed
    private void btnNegativeExponentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegativeExponentsActionPerformed
        switchScreen(); //calls on the switchScreen method which turns the visibility of all the panels false
        pnlNegativeExponent.setVisible(true); //turns the visibility of the negative exponent screen (pnlNegativeExponent) true
    }//GEN-LAST:event_btnNegativeExponentsActionPerformed

    //code that executes when the btnNegativeExponentPractice button is pressed
    private void btnNegativeExponentPracticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegativeExponentPracticeActionPerformed
        practiceButton(); //calls on the switchScreen method which turns the visibility of all the panels false
        
        lblQuestionOperator.setText(""); //clears the operator label as no operator is needed for the negative exponent questions
        txtPracticeOutput.setText("Remember, when an exponent is negative, you move the base to the denominator!"); //sets the text in the tip box (txtPracticeOutput) as a reminder on how to solve the problem
        lblQuestionExponentTwo.setForeground(Color.WHITE); //sets the text in lblQuestionExponentTwo white as the value in this exponent is not needed for the user, and so, it is hidden from the user
        lblQuestionBaseTwo.setForeground(Color.WHITE); //sets the text in lblQuestionBaseTwo white as the value in this base is not needed for the user, and so, it is hidden from the user
        answerExponent(); //calls on the answerExponent method
    }//GEN-LAST:event_btnNegativeExponentPracticeActionPerformed

    //code that executes when the btnSubmit button is pressed
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        String strBase = lblQuestionBaseTwo.getText(); //declares the string variable strBase as the text in lblQuestionBaseTwo (randomly generated by the randomNumber method)
        
        //if statement equating the user's input in txtAnswer to the correct answer, formulated by the strBase to the exponent (represented by the caret) value in the lblHiddenAnswer label
        if (txtAnswer.getText().equals(strBase + "^" + lblHiddenAnswer.getText())){
            lblPracticeOutput.setText("You got it!"); //sets the text in lblPracticeOutput to inform the user that they got the question right
            btnGiveUp.setEnabled(false); //disables the give up button as the user cannot give up after getting the question correct
        }
        else{ //sets the text in lblPracticeOutput to inform the user that they got the question wrong and can try again - does not disable the give up button as the user can still give up
            lblPracticeOutput.setText("That's not right! Try again!");
        }
        
        txtAnswer.setText(""); //clears the text in the txtAnswer box so that it does not carry forward
    }//GEN-LAST:event_btnSubmitActionPerformed

    //code that executes when the btnGiveUp button is pressed
    private void btnGiveUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiveUpActionPerformed
        btnSubmit.setEnabled(false); //disables the submit button as the user cannot submit an answer after giving up
        String strBase = numberGenerator(); //declares the string variable strBase as the text in lblQuestionBaseTwo
        
        lblPracticeOutput.setText("The answer is " + strBase + "^" + lblHiddenAnswer.getText()); //sets the text in lblPracticeOutput informing the user of the correct answer (formulated by the strBase to the exponent (represented by the caret) value in the lblHiddenAnswer label)
        txtPracticeOutput.setForeground(Color.BLACK); //sets the color of the txtPracticeOutput (the box that contains the hint) as black so the user can see the hint
        txtAnswer.setText(""); //clears the text in the txtAnswer box so that it does not carry forward
    }//GEN-LAST:event_btnGiveUpActionPerformed

    //code that executes when the btnAnotherQuestion button is pressed
    private void btnAnotherQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnotherQuestionActionPerformed
        btnSubmit.setEnabled(true); //enables the submit button as the user can submit an answer for the new question
        btnGiveUp.setEnabled(true); //enables the give up button as the user can give up for the new question
        txtAnswer.setText(""); //clears the text in the txtAnswer box so that it does not carry forward
        lblPracticeOutput.setText(""); //clears the text in the lblPracticeOutput box so that text does not carry forward
        txtPracticeOutput.setForeground(Color.WHITE); //sets the text in the txtPracticeOutput as white to hide the hint from the user
        numberGenerator(); //calls on the numberGenerator method
        answerExponent(); //calls on the answerExponent method
    }//GEN-LAST:event_btnAnotherQuestionActionPerformed

    //code that executes when the btnQuiz button is pressed
    private void btnQuizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuizActionPerformed
        switchScreen(); //calls on the switchScreen method which turns the visibility of all the panels false
        pnlQuiz.setVisible(true); //sets the visibility of the quiz screen (pnlQuiz) as true
    }//GEN-LAST:event_btnQuizActionPerformed

    ArrayList <String> quizUserAnswers = new ArrayList(); //declares quizUserAnswers array to store the answers the user inputs (string inputs)
    ArrayList <String> quizAnswers = new ArrayList(); //declares quizAnswers array to store the correct answer (string values)
    
    //code that executes when the btnAnswerEnter button is pressed
    private void btnAnswerEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnswerEnterActionPerformed
        
        Collections.addAll(quizAnswers, "6^8", "3^8", "5^18", "1/2^11", "1/4^20"); //defines the quizAnswers array list with the correct answers, in order of the questions on the pnlQuiz panel
        quizUserAnswers.removeAll(quizUserAnswers); //clears the quizUserAnswers array so that answers are not carried forward
        Collections.addAll(quizUserAnswers, txtQuizAnswerOne.getText(), txtQuizAnswerTwo.getText(), txtQuizAnswerThree.getText(), txtQuizAnswerFour.getText(), txtQuizAnswerFive.getText()); //adds the users input from the txtQuizAnswer boxes to the quizUserAnswers array list in the order of the questions on the pnlQuiz panel
        int intMark = 0; //declares integer variable intMark as 0; used to store the users mark
        
        //for statemet that runs through each entry in the users answers (through the quizUserAnswers array list) and sees if it matches the correct answer (in the quizAnswers array list) - if it matches, the intMark increases by one (represents how many they got right)
        for (int i = 0; i < 5; i++){
            if (quizUserAnswers.get(i).equals(quizAnswers.get(i))){
                intMark++;
            }
            else{ //nothing occurs if they get it wrong
            }
        }
        //if statement depending of if the user gets all the questions right
        if (intMark == 5){ //all five questions right
            lblQuizOutput.setText("You got perfect! Congratulations!"); //sets text in lblQuizOutput informing the user they got everything right
            //sets the enter button and text boxes as false so the user does not edit them after finishing the quiz
            btnAnswerEnter.setEnabled(false);
            btnMenuSix.setEnabled(true); //enables the menu button so the user can leave the quiz
            txtQuizAnswerOne.setEnabled(false);
            txtQuizAnswerTwo.setEnabled(false);
            txtQuizAnswerThree.setEnabled(false);
            txtQuizAnswerFour.setEnabled(false);
            txtQuizAnswerFive.setEnabled(false);
        }
        else{
            lblQuizOutput.setText("You got " + intMark + "/5 right. Try again!"); //sets text in lblQuizOutput informing the user how many questions they got right (out of 5)
        }
    }//GEN-LAST:event_btnAnswerEnterActionPerformed

    //code that executes when the menu button is pressed
    private void btnMenuOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuOneActionPerformed
        menuButton();
    }//GEN-LAST:event_btnMenuOneActionPerformed
    //code that executes when the menu button is pressed
    private void btnMenuTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuTwoActionPerformed
        menuButton();
    }//GEN-LAST:event_btnMenuTwoActionPerformed
    //code that executes when the menu button is pressed
    private void btnMenuThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuThreeActionPerformed
        menuButton();
    }//GEN-LAST:event_btnMenuThreeActionPerformed
    //code that executes when the menu button is pressed
    private void btnMenuFourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuFourActionPerformed
        menuButton();
    }//GEN-LAST:event_btnMenuFourActionPerformed
    //code that executes when the menu button is pressed
    private void btnMenuFiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuFiveActionPerformed
        menuButton();
    }//GEN-LAST:event_btnMenuFiveActionPerformed
    //code that executes when the menu button is pressed
    private void btnMenuSixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuSixActionPerformed
        menuButton();
    }//GEN-LAST:event_btnMenuSixActionPerformed

    //switchScreen method that turns all the panels visbility false
    public void switchScreen(){
        pnlStart.setVisible(false);
        pnlMenu.setVisible(false);
        pnlProductRule.setVisible(false);
        pnlQuotientRule.setVisible(false);
        pnlPowerRule.setVisible(false);
        pnlNegativeExponent.setVisible(false);
        pnlPractice.setVisible(false);
        pnlQuiz.setVisible(false);
    }

    //practiceButton method that is called when the practice button is pressed
    public void practiceButton(){
        switchScreen(); //calls switchScreen method
        pnlPractice.setVisible(true); //sets the practice panel's visibility as true
        
        numberGenerator(); //calls the numberGenerator method
        
        txtPracticeOutput.setForeground(Color.WHITE); //sets the text in the PracticeOutput as white so the user cannot see it
    }

    //numberGenerator method
    public String numberGenerator(){
        String strBase, strExponentOne, strExponentTwo; //declares variables used to store the randomly generated number
        
        //randomly generates numbrs for three variables from a range of 2 to 9 (inclusive)
        strBase = Integer.toString((int)Math.floor(Math.random()*8 + 2));
        strExponentOne = Integer.toString((int)Math.floor(Math.random()*8 + 2));
        strExponentTwo = Integer.toString((int)Math.floor(Math.random()*8 + 2));
        
        //sets the labels in the practice panel as the corresponding number
        lblQuestionBaseOne.setText(strBase);
        lblQuestionBaseTwo.setText(strBase);
        lblQuestionExponentOne.setText(strExponentOne);
        lblQuestionExponentTwo.setText(strExponentTwo);
        
        return strBase;
}

    //answerExponent method
    public void answerExponent(){
        int intExponentOne, intExponentTwo; //declares the two exponents
        
        //converst the exponents in the exponent boxes as integers
        intExponentOne = Integer.parseInt(lblQuestionExponentOne.getText());
        intExponentTwo = Integer.parseInt(lblQuestionExponentTwo.getText());
        
        //if statment that executes code depending on the lblQuestionOperator box - distinguishes exponent rules
        if ("*".equals(lblQuestionOperator.getText())){ //product rule
            lblHiddenAnswer.setText(Integer.toString (intExponentOne + intExponentTwo)); //sets the hidden answer (represents the exponent) as the sum of the exponents
        }
        else if ("/".equals(lblQuestionOperator.getText())){ //quotient rule
            lblHiddenAnswer.setText(Integer.toString(intExponentOne - intExponentTwo)); //sets the hidden asnwer as the difference of the exponents
        }
        else if (")".equals(lblQuestionOperator.getText())){ //power rule
            lblHiddenAnswer.setText(Integer.toString(intExponentOne * intExponentTwo)); //sets the hidden asnwer as the exponent
        }
        else { //negative exponent rule - sets the labels to suit the fraction
            lblQuestionExponentTwo.setText(lblQuestionExponentOne.getText()); 
            lblQuestionBaseTwo.setText("1/" + lblQuestionBaseTwo.getText());
            lblHiddenAnswer.setText(lblQuestionExponentTwo.getText());
            lblQuestionExponentOne.setText("-" + lblQuestionExponentOne.getText());
        }
    }
    
    //menuButton method which resets several labels, text boxesl, and buttons so the program can be continued to be used
    public void menuButton(){
        switchScreen();
        pnlMenu.setVisible(true);
        
        txtAnswer.setText("");
        lblQuestionBracket.setText("");
        lblPracticeOutput.setText("");
        lblQuestionBaseTwo.setForeground(Color.BLACK);
        lblQuestionExponentTwo.setForeground(Color.BLACK);
        btnSubmit.setEnabled(true);
        btnAnswerEnter.setEnabled(true);
        txtQuizAnswerOne.setEnabled(true);
        txtQuizAnswerTwo.setEnabled(true);
        txtQuizAnswerThree.setEnabled(true);
        txtQuizAnswerFour.setEnabled(true);
        txtQuizAnswerFive.setEnabled(true);
        txtQuizAnswerOne.setText("");
        txtQuizAnswerTwo.setText("");
        txtQuizAnswerThree.setText("");
        txtQuizAnswerFour.setText("");
        txtQuizAnswerFive.setText("");
        lblQuizOutput.setText("");
    }

    public static void main(String args[]) {
        
        //Set the Nimbus look and feel
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExponentTutorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExponentTutorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExponentTutorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExponentTutorial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExponentTutorial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnotherQuestion;
    private javax.swing.JButton btnAnswerEnter;
    private javax.swing.JButton btnGiveUp;
    private javax.swing.JButton btnMenuFive;
    private javax.swing.JButton btnMenuFour;
    private javax.swing.JButton btnMenuOne;
    private javax.swing.JButton btnMenuSix;
    private javax.swing.JButton btnMenuThree;
    private javax.swing.JButton btnMenuTwo;
    private javax.swing.JButton btnNegativeExponentPractice;
    private javax.swing.JButton btnNegativeExponents;
    private javax.swing.JButton btnPowerRule;
    private javax.swing.JButton btnPowerRulePractice;
    private javax.swing.JButton btnProductRule;
    private javax.swing.JButton btnProductRulePractice;
    private javax.swing.JButton btnQuiz;
    private javax.swing.JButton btnQuotientRule;
    private javax.swing.JButton btnQuotientRulePractice;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHiddenAnswer;
    private javax.swing.JLabel lblMenuTitle;
    private javax.swing.JLabel lblNegativeExponentExplanation;
    private javax.swing.JLabel lblNegativeExponentTitle;
    private javax.swing.JLabel lblPowerRuleExplanation;
    private javax.swing.JLabel lblPowerRuleTitle;
    private javax.swing.JLabel lblPracticeOutput;
    private javax.swing.JLabel lblPracticeTitle;
    private javax.swing.JLabel lblProductRuleExplanation;
    private javax.swing.JLabel lblProductRuleTitle;
    private javax.swing.JLabel lblQuestionBaseOne;
    private javax.swing.JLabel lblQuestionBaseTwo;
    private javax.swing.JLabel lblQuestionBracket;
    private javax.swing.JLabel lblQuestionExponentOne;
    private javax.swing.JLabel lblQuestionExponentTwo;
    private javax.swing.JLabel lblQuestionFive;
    private javax.swing.JLabel lblQuestionFour;
    private javax.swing.JLabel lblQuestionOne;
    private javax.swing.JLabel lblQuestionOperator;
    private javax.swing.JLabel lblQuestionThree;
    private javax.swing.JLabel lblQuestionTwo;
    private javax.swing.JLabel lblQuizOutput;
    private javax.swing.JLabel lblQuizTitle;
    private javax.swing.JLabel lblQuotientRuleExplanation;
    private javax.swing.JLabel lblQuotientRuleTitle;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlNegativeExponent;
    private javax.swing.JPanel pnlPowerRule;
    private javax.swing.JPanel pnlPractice;
    private javax.swing.JPanel pnlProductRule;
    private javax.swing.JPanel pnlQuiz;
    private javax.swing.JPanel pnlQuotientRule;
    private javax.swing.JPanel pnlStart;
    private javax.swing.JTextField txtAnswer;
    private javax.swing.JTextArea txtPracticeOutput;
    private javax.swing.JTextField txtQuizAnswerFive;
    private javax.swing.JTextField txtQuizAnswerFour;
    private javax.swing.JTextField txtQuizAnswerOne;
    private javax.swing.JTextField txtQuizAnswerThree;
    private javax.swing.JTextField txtQuizAnswerTwo;
    // End of variables declaration//GEN-END:variables
}
